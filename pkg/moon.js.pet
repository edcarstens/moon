//.#-*-Javascript-*-
//.+pet
PET Template for moon.js
----------------------------

//.class moonClass(templatejs):{

//. def add(self, layout, main):{
//.  layout < 'scripts'
script(src='javascripts/moon.js')
//.  main < 'body'
console.log('Welcome to MOON')
moon.init(
    //.+self.varlist > 'init call args'
    socket,
    //.-self.varlist
)
moon.start()
//. }

//. def output(self):{
moon = {
    //.+self.varlist > 'classvars'
    player: '',
    state: null,
    socket: null,
    describeTrump: {
	1: 'aces',
	2: 'ducks',
	3: 'threes',
	4: 'fours',
	5: 'fives',
	6: 'sixes',
	7: 'doubles',
	8: 'follow me'
    },
    //.-self.varlist
}

//.+self.function('gotoLogin')
$('#btnPlay').show()
$('#inputChatName').show()
$('#gfx').hide()
$('#btnSend').hide()
$('#inputMessage').hide()
//.-self.function
//.+self.function('init', 'socket')
moon.socket = socket
moon.gotoLogin()
//.-self.function
//.+self.afunction('clickPlay')
return new Promise( (resolve, reject) => {
    $('#btnPlay').on('click', () => {
	resolve($("#inputChatName").val())
    })
})
//.-self.afunction
//.+self.afunction('clickSend')
return new Promise( (resolve, reject) => {
    $('#btnSend').on('click', () => {
	resolve($("#inputMessage").val())
    })
})
//.-self.afunction
//.+self.afunction('boneClickedOrBot')
let p1 = new Promise( (resolve, reject) => {
    moon._boneClicked = (boneId) => {
	resolve({boneId, status:'DONE'})
    }
})
let p2 = new Promise( resolve => {
    moon.socket.once('moonbot', result => {
	resolve(result)
    })
})
let p = Promise.race([p1,p2])
//.-self.afunction('p')

//.+self.afunction('boneClicked')
let {boneId} = await this.boneClickedOrBot()
//.-self.afunction('boneId')

//.+self.afunction('rxRoom')
return new Promise( (resolve, reject) => {
    moon.socket.once('roomgrant', (data) => {
	resolve(data.roomName)
    })
})
//.-self.afunction
//.+self.afunction('myTurn')
return new Promise( (resolve, reject) => {
    moon.socket.once('yourturn', (data, ack) => {
	//resolve(data.nickName == moon.player)
	//ack(moon.socket.id, moon.player)
	ack(data)
	resolve(data)
    })
})
//.-self.afunction
//.+self.afunction('delay', 'time')
return new Promise( resolve => setTimeout(resolve, time) )
//.-self.afunction
//moon.socket.on('drewbone', (data) => {
//    console.log(`Player ${data.player} drew bone ${data.bone}`)
//})
//.+self.afunction('start')
let data, bone, boneId
let done = false
console.log('Starting MOON...')
$('#trump').hide()
$('#suit').hide()
// Need to show active gamerooms with moonbots..
moon.socket.on('vacancies', data => {
    console.log('vacancies..')
    console.log(data.vacancies)
})
moon.player = await moon.clickPlay()
$('#btnPlay').hide()
$('#inputChatName').hide()
$('#btnSend').show()
$('#inputMessage').show()
console.log(`Hello ${moon.player}`)
moon.socket.emit('roomreq', {player:moon.player})
moon.room = await moon.rxRoom()
console.log(`You get ${moon.room}`)
$('#message').html('<b>Waiting For Players..</b>')
$('#message').show()
//.self > 'start1'
moon.socket.on('drewbone', (data) => {
    console.log(`Player ${data.player} drew bone ${data.boneStr}`)
    $('#message').html(`<b>Player ${data.player} drew bone ${data.boneStr}</b>`)
    $('#message').show()
    bones.pool[data.boneId].faceup = true
    bones.pool[data.boneId].boneStr = data.boneStr
    bones.display(false)
})

moon.socket.on('state', (data) => {
    let player = data.player
    let boneId = data.boneId
    let bone = data.bone
    $('#message').html(`<b>${data.player} played ${bone.boneStr}</b>`)
    $('#message').show()
    if (socket.id != data.socketId) {
	bones.pool[boneId].faceup = bone.faceup
	bones.pool[boneId].owner = bone.owner
	bones.pool[boneId].trick = bone.trick
	bones.pool[boneId].boneStr = bone.boneStr
	bones.pool[boneId].played = bone.played
	bones.pool[boneId].discarded = bone.discarded
	bones.display(false)
    }
})

moon.socket.on('info', (s) => {
    $('#message').html('<b>' + s + '</b>')
})

moon.socket.on('call', data => {
    //moon.trump = data.call
    let s = moon.describeTrump[data.call]
    $('#message').html(`<b> ${data.caller} called ${s} trump</b>`)
    $('#message').show()
    moon.displayTrump(data.call)
})

while (! done) {
    data = await moon.myTurn()
    console.log(`My turn to ${data.cmd}`)
    //done = (data.cmd == 'shake')
    $('#suit').hide()
    $('#trump').hide()
    if (data.cmd == 'draw') {
	bones.pool = data.bones
	bones.display(true)
	$('#message').html(`<b>Draw one domino</b>`)
	$('#message').show()
	boneId = await moon.boneClicked()
	bones.pool[boneId].faceup = true
	//bones.pool[boneId].owner = moon.socket.id
	console.log(`I drew ${boneId}`)
	bones.display(false)
	moon._boneClicked = (boneId) => boneId
	moon.socket.emit('done', {boneId})
	$('#message').hide()
    }
    //.self > 'cmds'
    else if (data.cmd == 'draw7') {
	//console.log(data.bones)
	bones.pool = data.bones
	//console.log(bones.pool)
	let boneIds = []
	let result
	$('#message').html(`<b>Select 7 dominoes</b>`)
	$('#message').show()
	this.displayStats(data.stats)
	for (let i=0; i<7; i++) {
	    bones.display(true)
	    result = await moon.boneClickedOrBot()
	    if (result.status == 'MOONBOTDONE') {
		break
	    }
	    boneId = result.boneId
	    console.log(`I drew ${boneId}`)
	    boneIds.push(boneId)
	    bones.pool[boneId].faceup = true
	    bones.pool[boneId].owner = moon.socket.id
	}
	
	if (result.status == 'MOONBOTDONE') {
	    for (boneId of result.boneIds) {
		bones.pool[boneId].faceup = true
		bones.pool[boneId].owner = moon.socket.id
	    }
	}
	else {
	    moon.socket.emit('done', {boneIds})
	}
	bones.display(false)
	$('#message').hide()
    }
    else if (data.cmd == 'discard') {
	// let player discard a domino (with the kitty)
	//console.log('Discarding -- click on one domino')
	bones.pool = data.bones
	bones.display(true)
	$('#message').html(`<b>Discard a domino</b>`)
	$('#message').show()
	// do I really need to find the bone in bones.pool?
	boneId = await moon.boneClicked()
	console.log(`clicked ${boneId}`)
	bones.pool[boneId].faceup = false
	bones.pool[boneId].owner = ''
	bones.pool[boneId].discarded = true
	moon.socket.emit('done', {boneId})
	bones.display(false)
	moon._boneClicked = (boneId) => boneId
	$('#message').hide()
    }
    else if (data.cmd == 'play') {
	bones.pool = data.bones
	//console.log(data.stats)
	bones.display(true)
	$('#message').html(`<b>Play a domino</b>`)
	$('#message').show()
	this.displayStats(data.stats)
	//console.log(data.maxBone)
	this.displaySuit(data.maxBone)
	this.displayTrump(data.trump)
	boneId = -1
	while (boneId < 0) {
	    boneId = await moon.boneClicked()
	    if (boneId < 0) {
		let txt1 = 'Illegal play - '
		let txt2 = ''
		if (boneId == -1) {
		    txt2 = 'Must follow suit'
		}
		if (boneId <= -2) {
		    txt2 = 'Choose one from your hand'
		}
		$('#message').html(`<b>${txt1}${txt2}</b>`)
	    }
	}
	bones.pool[boneId].faceup = true
	bones.pool[boneId].owner = ''
	bones.pool[boneId].played = true
	console.log(`I played boneId ${boneId}`)
	bones.display(false)
	moon._boneClicked = (boneId) => boneId
	moon.socket.emit('done', {boneId})
	$('#message').hide()
    }
    console.log('done')
}

//.-self.afunction(0)

//.+self.function('displayStats', 'stats')
let s = '<tr>'
s += '<th>' + 'Name' + '</th>'
s += '<th>' + 'Wins' + '</th>'
s += '<th>' + 'Score' + '</th>'
s += '<th>' + 'Tricks' + '</th>'
s += '</tr>'
let socketId
for (socketId of stats.socketIds) {
    let ps = stats[socketId]
    s += '<tr>'
    s += '<td>' + ps.name   + '</td>'
    s += '<td>' + ps.wins   + '</td>'
    s += '<td>' + ps.score  + '</td>'
    s += '<td>' + ps.tricks + '</td>'
    s += '</tr>'
}
$('#stats').html(s)
$('#stats').show()
//.-self.function

//.+self.function('displaySuit', 'maxBone')
let suit
let trump
if (maxBone) {
    suit = maxBone.suit
    trump = maxBone.trump
    if (trump == 7) {
	trump = 'DOUBLES'
    }
    if (suit == 7) {
	suit = 'DOUBLES'
    }
    if ((suit == trump) && (suit != 'DOUBLES')) {
	suit += ' (TRUMP)'
    }
}
else {
    suit = '-'
}
let s = '<b> SUIT: ' + suit + ' </b>'
$('#suit').html(s)
$('#suit').show()
//.-self.function

//.+self.function('displayTrump', 'trump')
let trumpStr
if (trump == 7) {
    trumpStr = 'TRUMP: DOUBLES'
}
else if (trump >= 8) {
    trumpStr = 'FOLLOW ME'
}
else if (trump >= 1) {
    trumpStr = 'TRUMP: ' + trump
}
else {
    trumpStr = '-'
}
$('#trump').html('<b> ' + trumpStr + ' </b>')
$('#trump').show()
//.-self.function

//.self > 'body'
//. }

//.}

//.moon = moonClass('public/javascripts/moon.js','moon')

//.-pet
